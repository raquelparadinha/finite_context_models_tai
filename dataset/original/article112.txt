111 The bubble sort and quicksort are designed to work with records that are in random order.  However  in many applications a database grows slowly over time.  At any given time the existing database is already sorted  so it hardly makes sense to have to resort the whole database each time a new record is added. Instead  an insertion sort can be used.  In its simplest form  the algorithm looks sequentially through the sorted records until it finds the first record whose key is higher than that of the new record.  The new record can then be inserted just before that record  much like the way a bridge player might organize the cards in a hand.  (Since inserting a record and physically moving all the higher records up in memory can be time-consuming  a linked list of key values and associated record number is often used instead.  (See list processing. ) That way only the links need to be changed rather than any records being moved. The insertion sort was improved by Donald L.  Shell in 1959.  His â€œshellsortâ€ takes a recursive approach (like that in the quicksort)  and applies the insertion sort procedure to successively smaller partitions. Another improvement on the insertion sort is the mergesort.  As the name implies  this approach begins by creating two small lists of sorted records (using a simple comparison algorithm)  then merging the lists into longer lists.  Merging is accomplished by looking at the two keys on the top of two lists and taking whichever is lowest until the lists are exhausted.  The merge sort also lends itself to a recursive approach  and it is comparable in speed and stability to the heapsort 
