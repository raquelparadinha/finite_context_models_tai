118 A stack is simply a list that represents successive locations in memory into which data can be inserted.  The operation of a stack can be visualized as being rather like the springloaded platform onto which dishes are stacked for washing in some restaurants.  As each dish (number) is added  the stack is â€œpushed. â€ Because only the item â€œon topâ€ (the last one added) can be removed (â€œpoppedâ€) at any given time  a stack is described as a LIFO (last in  first out) structure.  (Note that this is different from a queue  where items can be added or removed from either end [see queue]. )Stacks are useful whenever nested items must be tracked.  For example  a procedure might call a procedure that in turn calls another procedure.  The stack can keep track of the parameters (as well as the calling address) for each pending procedure. Stacks can also be used to evaluate nested arithmetic expressions.   
