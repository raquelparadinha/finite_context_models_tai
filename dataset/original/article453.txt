452 A fundamental problem in computer design is the control of devices such as disk drives and printers.  Each device is designed to respond to a particular set of control commands sent as patterns of binary values through the port to which the device is connected.  For example  a printer will respond to a â€œnew pageâ€ command by skipping lines to the end of the current page and moving the print head to the start of the next page  taking margin settings into account.  The problem is this: When an applications program such as a word processor needs to print a document  how should the necessary commands be provided to the printer? If every application program has to include the appropriate set of commands for each device that might be in use  programs will be bloated and much development effort will be required for supporting devices rather than extending the functionality of the product itself.  Instead  the manufacturers of printers and other devices such as scanners and graphics tablets typically provide a program called a driver.  (A version of the driver is created for each major operating system in use. ) The driver serves as the intermediary between the application  the operating system and the low-level device control system.  It is sometimes useful to have drivers in the form of continually running programs that monitor the status of a device and wait for commands.  
