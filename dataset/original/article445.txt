444 The preceding data types all hold single values.  However  most modern languages allow for the construction of data types that can hold more than one piece of data.  The arrayis the most basic structured data type; it represents a series of memory locations that hold data of one of the basic types.  Thus  in Pascal an array of integer holds integers  each taking up two bytes of memory. Many languages have composite data types that can hold data of several different basic types.  For example  the struct in C or the record in Pascal can hold data such as a personâ€™s first and last name  three lines of address (all arrays of characters  or strings)  an employee number (perhaps an integer or double)  a Boolean field representing the presence or absence of some status  and so on.  This kind of data type is also called a user-defined data type because programmers can define and use these types in almost the same ways as they use the languageâ€™s built-in basic types. What is the difference between data types and data structures? There is no hard-and-fast distinction.  Generally  data structures such as lists  stacks  queues  and trees are more complex than simple data types  because they include data relationships and special functions (such as pushing or popping data on a stack).  However  a list is the fundamental data type in list-processing languages such as Lisp  and string operators are built into languages such as Snobol.  (See list processing  stack  queue  and tree. )Further  in many modern languages fundamental and structured data types are combined seamlessly into classes that combine data structures with the relevant operations   
