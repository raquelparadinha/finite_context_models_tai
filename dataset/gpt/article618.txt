617 Selection sort is a simple sorting algorithm that works by repeatedly finding the smallest element from the unsorted part of an array and moving it to the beginning of the array.  The algorithm maintains two subarrays: the sorted subarray  which starts as empty  and the unsorted subarray  which starts as the entire array. The algorithm proceeds by finding the smallest element in the unsorted subarray and swapping it with the first element in the unsorted subarray.  This effectively moves the smallest element to the beginning of the array and expands the sorted subarray by one element.  The algorithm then repeats this process for the remainder of the unsorted subarray until the entire array is sorted. In each step of the algorithm  the smallest element in the unsorted subarray is identified and swapped with the first element in the unsorted subarray.  After four steps  the array is sorted in ascending order. Selection sort has a time complexity of O(n^2)  which makes it inefficient for large arrays.  However  it is simple to implement and is useful for small arrays or as a building block for more complex sorting algorithms.  
