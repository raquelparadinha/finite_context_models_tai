621 In hash-based sorting algorithms  a hash table is used to store the elements to be sorted.  The keys of the hash table are computed from the values of the elements using a hash function.  The values stored in the hash table can be either the elements themselves  or pointers to the elements. The elements are then sorted by iterating through the hash table and collecting the values in order.  Since hash tables do not maintain any order on their own  the order of the elements collected from the hash table must be determined based on the order of the hash keys.  In some cases  a secondary sorting algorithm may be used to sort the values with the same hash key. One advantage of hash-based sorting algorithms is that they can achieve linear time complexity in the average case  since hash table operations such as insertion and lookup can be performed in constant time on average.  However  the worst-case time complexity is typically higher than other sorting algorithms  since collisions in the hash table can lead to slower performance.  
