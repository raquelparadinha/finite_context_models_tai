620 Insertion sort is a simple sorting algorithm that builds the final sorted array one element at a time.  The algorithm iterates through the array and at each iteration  it takes the current element and inserts it into its correct position in the sorted subarray to the left of it. The algorithm maintains two subarrays: the sorted subarray  which starts as the first element of the array  and the unsorted subarray  which starts as the remaining elements of the array. In each step of the algorithm  the current element in the unsorted subarray is compared with the elements in the sorted subarray until its correct position is found.  The elements in the sorted subarray that are greater than the current element are shifted one position to the right to make room for the current element.  The current element is then inserted into its correct position in the sorted subarray. Insertion sort has a time complexity of O(n^2)  which makes it inefficient for large arrays.  However  it is simple to implement and is useful for small arrays or for sorting partially sorted arrays.  It is also an efficient algorithm for sorting small datasets  or for use as a sub-routine in more complex algorithms.  
